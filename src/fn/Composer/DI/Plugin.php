<?php
/**
 * (c) php-fn
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace fn\Composer\DI;

use Composer\Composer;
use Composer\EventDispatcher\EventSubscriberInterface;
use Composer\IO\IOInterface;
use Composer\Plugin\PluginInterface;
use Composer\Script\Event;
use Composer\Script\ScriptEvents;

/**
 */
class Plugin implements PluginInterface, EventSubscriberInterface
{
    /**
     * @inheritdoc
     */
    public function activate(Composer $composer, IOInterface $io)
    {
    }

    /**
     * @inheritdoc
     */
    public static function getSubscribedEvents(): array
    {
        return [
            ScriptEvents::POST_AUTOLOAD_DUMP => 'onAutoloadDump',
        ];
    }

    /**
     * @param Event $event
     */
    public static function onAutoloadDump(Event $event)
    {
        $composer = $event->getComposer();

        self::modifyAutoloadFile($composer->getConfig()->get('vendor-dir') . '/autoload.php');

        $classes = \implode(\PHP_EOL, \iterator_to_array(new Generator\Provider(
            (array)($composer->getPackage()->getExtra()['di'] ?? []),
            (array)($composer->getPackage()->getExtra()['di-config'] ?? [])
        )));

        \file_put_contents(
            $file = __DIR__ . '/Invoker.php',
            <<<EOF
<?php
// @generated by php-fn/di

$classes
EOF

        );

        $event->getIO()->write("<info>Invoker class '$file' generated</info>");
    }

    /**
     * @param string $file
     */
    private static function modifyAutoloadFile(string $file)
    {
        \file_put_contents($file,  \str_replace(
            [
                '@generated by Composer',
                '::getLoader();',
                'return ComposerAutoloaderInit',
            ],
            [
                '@generated by Composer & @modified by php-fn/di',
                '::getLoader());',
                <<<EOF
return call_user_func(function(\$loader) {
    return fn\Composer\DI\ClassLoader::instance(\$loader);
}, ComposerAutoloaderInit
EOF
            ],
            \file_get_contents($file)
        ));
    }
}
