<?php
/**
 * (c) php-fn
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace fn\Composer\DI;

use Composer\Composer;
use Composer\EventDispatcher\EventSubscriberInterface;
use Composer\IO\IOInterface;
use Composer\Plugin\PluginInterface;
use Composer\Script\Event;
use Composer\Script\ScriptEvents;

/**
 */
class Plugin implements PluginInterface, EventSubscriberInterface
{
    /**
     * @inheritdoc
     */
    public function activate(Composer $composer, IOInterface $io)
    {
    }

    /**
     * @inheritdoc
     */
    public static function getSubscribedEvents(): array
    {
        return [
            ScriptEvents::POST_AUTOLOAD_DUMP => 'onAutoloadDump',
        ];
    }

    /**
     * @param Event $event
     */
    public static function onAutoloadDump(Event $event)
    {
        $composer  = $event->getComposer();
        $vendorDir = $composer->getConfig()->get('vendor-dir');

        self::modifyAutoloadFile($vendorDir . '/autoload.php');
        $event->getIO()->write("autoload file $vendorDir/autloload.php modified");

        $di       = $composer->getPackage()->getExtra()['di'] ?? null;
        $diConfig = $composer->getPackage()->getExtra()['di-config'] ?? [];

        \file_put_contents(
            __DIR__ . '/container-classes.php',
            self::generateContainerClasses($di, $diConfig)
        );
        $event->getIO()->write('Container classes generated');

        \file_put_contents(
            __DIR__ . '/Invoker.php',
            self::generateInvokerClass($di, $diConfig)
        );
        $event->getIO()->write('Invoker class generated');
    }

    /**
     * @param mixed $di
     * @param array $config
     *
     * @return string
     */
    private static function generateContainerClasses($di, array $config) : string
    {
        return <<<EOF
<?php
// @generated by php-fn/di

EOF;

    }

    /**
     * @param mixed $di
     * @param array $config
     *
     * @return string
     */
    private static function generateInvokerClass($di, array $config) : string
    {
        return <<<EOF
<?php
// @generated by php-fn/di

namespace fn\Composer\DI;

class Invoker extends \DI\Container
{
    /**
     * @inheritdoc
     */ 
    public function __construct()
    {
         require_once __DIR__ . '/container-classes.php';
         \$config = ContainerConfigurationFactory::create([], null, ...[]);
         parent::__construct(
            \$config->getDefinitionSource(), 
            \$config->getProxyFactory(), 
            \$config->getWrapperContainer()
         );
    }
}

EOF;
    }

    /**
     * @param string $file
     */
    private static function modifyAutoloadFile(string $file)
    {
        \file_put_contents($file,  \str_replace(
            [
                '@generated by Composer',
                '::getLoader();',
                'return ComposerAutoloaderInit',
            ],
            [
                '@generated by Composer & @modified by php-fn/di',
                '::getLoader());',
                <<<EOF
return call_user_func(function(\$loader) {
    return fn\Composer\DI\ClassLoader::instance(\$loader);
}, ComposerAutoloaderInit
EOF
            ],
            \file_get_contents($file)
        ));
    }
}
